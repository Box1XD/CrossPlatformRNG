<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <!--If you are willing to use Windows/MacOS native APIs you will need to create 3 projects.
    One for Windows with net8.0-windows TFM, one for MacOS with net8.0-macos and one with net8.0 TFM for Linux.-->
    <TargetFramework>net8.0</TargetFramework>
    <Nullable>enable</Nullable>
    <BuiltInComInteropSupport>true</BuiltInComInteropSupport>
    <Platforms>AnyCPU;x64</Platforms>
    <Version>1.0.0</Version>
  </PropertyGroup>

  <PropertyGroup>
    <ApplicationManifest>app.manifest</ApplicationManifest>
    <ErrorReport>none</ErrorReport>
    <!--<PublishAot>True</PublishAot>-->
  </PropertyGroup>

  <PropertyGroup Label="Avalonia">
    <AvaloniaUseCompiledBindingsByDefault>True</AvaloniaUseCompiledBindingsByDefault>
    <IncludeSymbols>False</IncludeSymbols>
    <ApplicationIcon>Assets\logo.ico</ApplicationIcon>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <DebugType>none</DebugType>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <DebugType>none</DebugType>
  </PropertyGroup>


  <ItemGroup>
    <AvaloniaResource Include="Assets\logo.ico" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Avalonia.Desktop" />
    <!--Condition below is needed to remove Avalonia.Diagnostics package from build output in Release configuration.-->
    <PackageReference Condition="'$(Configuration)' == 'Debug'" Include="Avalonia.Diagnostics" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\RandomNumberAvalonia\RandomNumberAvalonia.csproj" />
  </ItemGroup>

  <ItemGroup>
    <AvaloniaResource Remove="logo.ico" />
  </ItemGroup>
</Project>
